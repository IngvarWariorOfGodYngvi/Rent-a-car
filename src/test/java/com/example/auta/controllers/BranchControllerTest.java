package com.example.auta.controllers;import com.example.auta.domain.entities.BranchEntity;import com.example.auta.domain.entities.CompanyEntity;import com.example.auta.domain.repositories.CarRepository;import com.example.auta.domain.repositories.CompanyRepository;import com.example.auta.models.classes.Car;import org.junit.After;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.boot.test.web.client.TestRestTemplate;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.test.context.junit4.SpringRunner;import java.util.UUID;import static org.junit.Assert.*;@RunWith(SpringRunner.class)@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)public class BranchControllerTest {    @Autowired    private TestRestTemplate testRestTemplate;    @Autowired    private CarRepository carRepository;    @Autowired    private CompanyRepository companyRepository;    private String branchUUID;    @Before    public void setUp(){        CompanyEntity company = CompanyEntity.builder().name("WiesiekCar").build();        BranchEntity branch = BranchEntity.builder().address("ul. Cebulowa 34, 04-123 Warszawa").build();        company.getBranches().add(branch);        company = companyRepository.saveAndFlush(company);        branchUUID = company.getBranches().get(0).getId().toString();    }    @After    public void tearDown() {        carRepository.deleteAll();        companyRepository.deleteAll();    }    @Test    public void addCar() {        Car car = Car.builder().make("FIAT").build();        ResponseEntity<String> re = testRestTemplate.postForEntity(                String.format("/branch/%s/addcar",branchUUID.toString()),                car, String.class);        assertEquals(HttpStatus.OK, re.getStatusCode());        String carUUID = re.getBody().replace("\"", "");        assertTrue(carRepository.findById(UUID.fromString(carUUID)).isPresent());    }    @Test    public void deleteCar() {    }}