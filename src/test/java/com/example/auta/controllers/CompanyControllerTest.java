package com.example.auta.controllers;import com.example.auta.domain.entities.CompanyEntity;import com.example.auta.domain.repositories.CompanyRepository;import com.example.auta.models.classes.Company;import org.junit.After;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.boot.test.web.client.TestRestTemplate;import org.springframework.core.ParameterizedTypeReference;import org.springframework.http.HttpMethod;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.test.context.junit4.SpringRunner;import java.util.*;import static org.junit.Assert.*;@RunWith(SpringRunner.class)@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)public class CompanyControllerTest {    @Autowired    private TestRestTemplate testRestTemplate;    @Autowired    private CompanyRepository companyRepository;    @After    public void tearDown(){        companyRepository.deleteAll();    }    @Test    public void addCompany() {        Company company = Company.builder().name("WiesiekCar").build();        ResponseEntity<String> re = testRestTemplate.postForEntity("/company/addcompany",                                                                   company,                                                                   String.class);        assertEquals(HttpStatus.OK, re.getStatusCode());        String uuid = re.getBody().replace("\"", "");        assertTrue(companyRepository.findById(UUID.fromString(uuid)).isPresent());    }    @Test    public void updateCompany() {    }    @Test    public void listCompanies() {        CompanyEntity company1 = CompanyEntity.builder().name("WiesiekCar").build();        CompanyEntity company2 = CompanyEntity.builder().name("JanuszWÃ³z").build();        companyRepository.saveAll(Arrays.asList(company1,company2));        ResponseEntity<Map<UUID,Company>> re = testRestTemplate                .exchange("/company/listcompanies",                          HttpMethod.GET,                          null,                          new ParameterizedTypeReference<Map<UUID, Company>>(){});        Map<UUID,Company> map = re.getBody();        assertEquals(HttpStatus.OK, re.getStatusCode());        assertEquals(2, map.size());    }    @Test    public void deleteBranch() {    }    @Test    public void addBranch() {    }    @Test    public void deleteCompany() {    }}